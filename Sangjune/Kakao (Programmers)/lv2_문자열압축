import sys

fin = sys.stdin.readline

def compression(num_list, string_list):
    arr = []
    idx = 0
    while idx < len(num_list):
        if idx + 1 >= len(num_list): break
        if string_list[idx] == string_list[idx+1]:
            del(num_list[idx+1])
            del(string_list[idx+1])
            num_list[idx] += 1
        else:
            idx += 1
    
    for i in range(len(num_list)):
        if num_list[i] == 1:
            arr += string_list[i]
        else:
            arr += str(num_list[i]) + string_list[i]
    
    # print('개수list: ', num_list)
    # print('str list: ', string_list)
    # print('arr: ', arr)
    return len(arr)

# test_num = [1] * 5
# test_string = ['ab', 'ab', 'cd', 'cd', 'de']
# print(compression(test_num, test_string))

def solution(s):
    answer = 0
    res = []
    
    for num in range(1, len(s)):
        # print('num: ', num)
        start_num = 0
        numbers = []
        strs = []
        redundant = 0
        
        if len(s) % num != 0:
            redundant = len(s) % num

        while start_num < len(s) - redundant:
            numbers.append(1)
            strs.append(s[start_num : start_num + num])
            start_num += num

        res.append(compression(numbers, strs) + redundant) # redundant 더해줘야함
    
    # print(res)
    if len(res) > 0:
        answer = min(res)
    else:
        answer = len(s)

    return answer

s = fin().rstrip()
print(solution(s))