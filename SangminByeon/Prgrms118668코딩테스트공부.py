def solution(alp, cop, problems):
    answer = 0
    
    t = 0
    
    dp[0] = [alp,cop]
    dp[1] = [dp[0][0] +1, dp[0][1]]
                
              
                
    '''''''''''''''''
    time = 0 일 때, dp[0] = (alp, cop)
    time = 1 일 때, dp[1] = (alp+1, cop), (alp, cop+1), (alp+k, cop+l)
            *k, l은 현재 실력에서 풀 수 있는 문제 중 시간 1 내에 풀리는 문제의 리워드
    time = 2 일 때, dp[2] = dp[1]+(1,0), dp[1]+(0,1), dp[1]+(m,n), dp[0]+(o,p)
            *m, n은 현재 실력에서 풀 수 있는 문제 중 시간 2-1 내에 풀리는 문제의 리워드
            *o, p는 현재 실력에서 풀 수 있는 문제 중 시간 2-0 내에 풀리는 문제의 리워드
    time = t 일 때, dp[t] = dp[t-1]+(1,0), dp[t-1]+(0,1), dp[t-u]+(x,y)
            *x, y는 현재 실력에서 풀 수 있는 문제 중 시간 t-u 내에 풀리는 문제의 리워드
            
    항상 dp가 max 값을 갖게하고, 매 시간마다 문제를 다 풀수 있는 능력이 되는지를 체크한다 -> 다 풀 수 있으면 time 반환
    '''''''''''''''''
            
        
    
    
    return answer